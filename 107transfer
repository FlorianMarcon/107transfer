#! /usr/bin/env python3

import sys

class Polynome():
	def __init__(self, tab_degree):
		self.tab_degree = tab_degree
	def compute(self, x):
		value = 0
		power = 0
		for s in self.tab_degree:
			value = value + (float(s) * (pow(x, power)))
			power = power + 1
		return (value)

def transfer_function(tab, k):
	i = 0
	value = 1
	while i <= len(tab) - 1:
		var = tab[i].compute(k) / tab[i + 1].compute(k)
		value = value * var
		i = i + 2
	return (value)

def loop(tab):
	k = 0.0
	while k <= 1.0:
		print (k, "-> ", end = "")
		print("%.5f" % transfer_function(tab , k))
		k = round(k + 0.001, 3)

def	verify(string):
	tab = string.split("*")
	try:
		for s in tab:
			float(s)
	except:
		print("Bad arguments")
		return (0)
	return (1)

def create_list_polynome():
	i = 0
	tab = [0] * (len(sys.argv) - 1)
	while i + 1 < len(sys.argv):
		if verify(sys.argv[i + 1]) == 0:
			return (-1)
		tab[i] =  Polynome(sys.argv[i + 1].split("*"))
		i = i + 1
	return(tab)
if __name__ == "__main__":
	if len(sys.argv) % 2 != 1:
		sys.exit(84)
	tab = create_list_polynome()
	if tab == -1:
		sys.exit(84)
	loop(tab)
